name: Open Journals
on:
  workflow_dispatch:
    inputs:
      filepath:
        description: Path to the Markdown paper file.
        required: true
        type: string
        default: joss/paper.md
      pdf-production:
        description: PDF (final)
        type: boolean
        required: true
      pdf:
        description: PDF (draft)
        type: boolean
        required: true
      contextpdf:
        description: PDF (context)
        type: boolean
        required: true
      tex:
        description: TeX (final)
        type: boolean
        required: true
      preprint:
        description: TeX (draft)
        type: boolean
        required: true
      docx:
        description: DOCX
        type: boolean
        required: true
      jats:
        description: JATS
        type: boolean
        required: true
      html:
        description: HTML
        type: boolean
        required: true
      crossref:
        description: CrossRef
        type: boolean
        required: true
      cff:
        description: CFF
        type: boolean
        required: true

jobs:
  preprocess:
    name: Input Processing
    runs-on: ubuntu-latest
    outputs:
      output_args: ${{ steps.process.outputs.output_args }}
    steps:
      - name: Build Types
        id: process
        run: |
          echo '${{ toJSON(inputs) }}' > inputs.json
          output_args=()
          for var_name in pdf contextpdf tex preprint docx jats html crossref cff; do
            value=$(jq -r ".${var_name}" inputs.json)
            echo "$var_name : $value"
            if [[ "$value" == "true" ]]; then
              output_args+=("-o $var_name")
            fi
          done
          # Convert the array to a JSON string (GitHub Actions doesn't support arrays directly)
          output_args_json=$(printf '%s\n' "${output_args[@]}" | jq -R . | jq -s -c .)
          echo "Matrix array: $output_args_json"

          # Set the output for the job
          echo "output_args=$output_args_json" >> $GITHUB_ENV
  build:
    runs-on: ubuntu-latest
    needs: preprocess
    strategy:
      fail-fast: false
      matrix:
        journal: [ joss, jose, resciencec ]
        output: ${{ fromJSON(needs.preprocess.outputs.output_args) }}
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4
        with:
          path: repo
      - name: Directory Location
        id: loc
        run: |
          dirpath=$(dirname "${{ inputs.filepath }}")
          echo "$dirpath"
          echo "dirpath=$dirpath" >> $GITHUB_ENV
      - name: Directory Pre-Scan
        id: state-before
        run: |
          before=$(find "repo/$dirpath")
          echo "$before"
          {
            echo 'before<<EOF'
            echo $before
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Build
        uses: docker://openjournals/inara:latest
        env:
          JOURNAL: ${{ matrix.journal }}
        with:
          args: -o ${{ matrix.output }} repo/${{ inputs.filepath }}
      - name: Directory Post-Scan
        id: state-after
        run: |
          after=$(find "repo/$dirpath")
          echo "$after"
          {
            echo 'after<<EOF'
            echo $after
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Output Identification
        run: |
          before=($before)
          after=($after)
          output_paths=""
          for item in "${after[@]}"; do
            if [[ ! " ${before[@]} " =~ " $item " ]]; then
              output_paths+="$item"$'\n'
            fi
          done
          echo "$output_paths"
          {
            echo 'output_paths<<EOF'
            echo $output_paths
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Artifact Generation
        run: |          
          mkdir -p output
          sudo chown -R runner:docker "repo/$dirpath"
          output_paths=($output_paths)
          for new_item in "${output_paths[@]}"; do
            # Check if the parent directory has already been moved
            if [[ ! -e "$new_item" ]]; then
              echo "Skipping $new_item: already moved as part of its parent directory."
              continue
            fi
            echo "Moving $new_item"
            mv "$new_item" output/
          done
      - name: Artifact Overview
        run: tree output
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: paper-${{matrix.journal}}-${{matrix.output}}
          path: output
      
  wheel-merge:
    name: Artifact Merge
    if: ${{ !cancelled() }}
    needs: [ open-journals ]
    runs-on: ubuntu-latest
    steps:
      - name: Merge
        uses: actions/upload-artifact/merge@v4
        with:
          name: paper
          pattern: paper-*
          separate-directories: 'true'
          delete-merged: 'true'

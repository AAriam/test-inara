name: Open Journals
on:
  workflow_dispatch:
    inputs:
      filepath:
        description: Path to the Markdown paper file.
        required: true
        type: string
        default: docs/papers/joss/paper.md
      journal:
        description: Journal
        required: true
        default: JOSS
        type: choice
        options:
          - JOSS
          - JOSE
          - ReScience C
      ref:
        description: Git reference
        required: false
        type: string
      repository:
        description: GitHub repository
        required: false
        type: string
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository || github.repository }}
          ref: ${{ inputs.ref || github.ref }}
      - name: Directory Location
        run: |
          dirpath=$(dirname "${{ inputs.filepath }}")
          echo "$dirpath"
          echo "DIRPATH=$dirpath" >> $GITHUB_ENV
      - name: Directory Overview
        run: tree $DIRPATH
      - name: Output Files
        run: |
          output_files="CITATION.cff
          paper.context.pdf context.pdf
          paper.crossref crossref.xml
          paper.docx
          paper.html index.html
          media
          jats
          paper.pdf draft.pdf
          paper.preprint.tex draft.tex
          paper.tex"
          echo "$output_files"
          {
            echo 'OUTPUT_FILES<<EOF'
            echo $output_files
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Directory Cleanup
        run: |
          while IFS=' ' read -r old_path new_path; do
            rm -rf "$old_path" 2>/dev/null || echo "Path '$old_path' does not exist; skipping removal."
          done <<< "$OUTPUT_FILES"
      - name: Directory Overview
        run: tree $DIRPATH
      - name: Journal Determination
        run: |
          journal=$(echo "${{ inputs.journal }}" | tr '[:upper:]' '[:lower:]' | tr -d ' ')
          echo "JOURNAL=$journal" >> $GITHUB_ENV
      - name: Build
        uses: docker://openjournals/inara:latest
        with:
          args: -o pdf,contextpdf,tex,preprint,docx,html,crossref,cff ${{ inputs.filepath }}
      - name: Output Rename
        run: |
          while IFS=' ' read -r old_path new_path; do
            if [[ -n "$old_path" && -n "$new_path" ]]; then
              echo "Renaming $old_path to $new_path"
              mv "$old_path" "$new_path" 2>/dev/null || echo "Failed to rename $old_path"
            fi
          done <<< "$OUTPUT_FILES"
      - name: Directory Overview
        run: tree $DIRPATH
      - name: Production Build
        uses: docker://openjournals/inara:latest
        with:
          args: -p ${{ inputs.filepath }}
      - name: Directory Overview
        run: tree $dirpath
      - name: Artifact Generation
        run: |          
          upload_paths=""
          while IFS=' ' read -r old_path new_path; do
            if [[ -n "$new_path" ]]; then
              upload_paths+="$new_path"$'\n'
            else
              upload_paths+="$old_path"$'\n'
            fi
          done <<< "$OUTPUT_FILES"
          upload_paths+="paper.pdf"$'\n'
          {
            echo 'UPLOAD_PATHS<<EOF'
            echo $upload_paths
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: paper
          path: ${{ env.UPLOAD_PATHS }}